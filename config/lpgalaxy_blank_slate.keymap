#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_BASE 1
#define TBLE_ORTHO 1

#define LY_NAV 1
#define LY_LNUM 2

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <200>;
};

&mt {
    tapping-term-ms = <300>;
};

#define BT(n) BT_SEL n

/ {

    chosen {
        zmk,matrix_transform = &ortho_transform;
    };

    macros {
        ZMK_MACRO(thumbs_up,
            wait-ms = <1>;
            tap-ms = <5>;
            bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
        )
    };

    tap_dances {
        shifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFTY";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LGUI|MOD_RSFT)>;
        };

        kpkp: kp_to_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_TO_KP";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            tapping-term-ms = <170>;
        };

        hm1: homerow_mods1 {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS2";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <170>;
            quick-tap-ms = <170>;
            require-prior-idle-ms = <120>;
            bindings = <&kp>, <&kp>;
        };

        mm_num_bs: morph_number_backspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&hm1 LY_LNUM BKSP>, <&kp BKSP>;
            mods = <(MOD_LGUI|LEFT_ALT)>;
            keep-mods = <(MOD_LGUI|LEFT_ALT)>;
        };
        mm_rsft_ret: morph_rshift_enter {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&hm1 RSFT SLASH>, <&kp RET>;
            mods = <(MOD_LGUI|LEFT_SHIFT)>;
            keep-mods = <(MOD_LGUI|LEFT_SHIFT)>;
        };
    };

    //- 숫자키 > 우측 엄지(f18)에 배치 (모드키랑 같이 사용 가능하게 설정)
    //- 특수키 > 우측 슬래쉬(/)에 배치 > 또는 좌측 어딘가에 배치 (v 추천)

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
                //- 모프로 슬래쉬쪽 > 엔터 지우기등
                //- 우측 right shift 로 좌측 모프 먹이기
                //- [esc 탭 지우기 엔터 한영]
                //- 슬래쉬 위치 변경(단축키 안먹음)
                &none  &kp Q         &kp W  &kp E     &kp R     &kp T                &kp Y       &kp U            &kp I      &kp O    &kp P         &none
                &none  &hm1 LCTL A   &kp S  &kp D     &kp F     &kp G                &kp H       &kp J            &kp K      &kp L    &mm_num_bs    &none
                &none  &hm1 LSFT Z   &kp X  &kp C     &kp V     &kp B                &kp N       &kp M            &kp COMMA  &kp DOT  &mm_rsft_ret  &none
                &none  &none         &none  &kp LALT  &kp LGUI  &kp SPACE            &mo LY_NAV  &kpkp RCTRL F18  &kp RCTRL  &none    &none         &none
            >;
        };

        nav_layer {
            label = "LY_NAV";
            bindings = <
                //- 모프로 탭이동
                &none    &kp LBRC         &kp RBRC   &kp LPAR      &kp RPAR      &kp DLLR           &none     &kp GRAVE  &kp UP            &kp PG_UP         &kp COLON  &kp BKSP
                &none    &hm1 LCTL LBKT   &kp RBKT   &kp KP_MINUS  &kp KP_EQUAL  &kp SQT            &kp DQT   &kp LEFT   &kp DOWN          &kp RIGHT         &kp SEMI   &kp RET
                &none    &hm1 LSFT UNDER  &kp QMARK  &kp LT        &kp GT        &kp BSLH           &kp AMPS  &kp PG_DN  &kp LG(LS(LBKT))  &kp LG(LS(RBKT))  &none      &kp RSHFT
                &none    &none            &none      &kp LALT      &kp LGUI      &kp SPACE          &none     &none      &none             &none             &none      &none
            >;
        };

        left_num_layer {
            label = "LY_LNUM";
            bindings = <
                &none  &none    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &none      &kp PLUS  &kp MINUS  &kp EQUAL  &none
                &none  &kp LCTL &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none         &none         &kp SLASH  &kp DOT   &kp COMMA  &kp STAR   &none
                &none  &kp LSFT &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none         &none         &none      &none     &none      &none      &none
                &none  &none    &none         &kp LALT      &kp LGUI      &kp NUMBER_0  &kp LSHFT     &none      &none     &none      &none      &none
            >;
        };

    };

};
