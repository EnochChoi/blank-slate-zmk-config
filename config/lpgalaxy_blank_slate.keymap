#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define TBLE_ORTHO 1
#define ___ &none
// #define XXX &none
// #define ___ &trans

#define LY_ARROW 1
#define LY_RNUM 2
#define LY_LNUM 3
#define LY_FUNC 4
#define LY_LEFT_SUPER 5
#define LY_RIGHT_SUPER 6

&lt {
    tapping-term-ms = <160>;
};

&mt {
    tapping-term-ms = <300>;
};

#define BT(n) BT_SEL n

/ {

    chosen {
        zmk,matrix_transform = &ortho_transform;
    };

    macros {
        ZMK_MACRO(thumbs_up,
            wait-ms = <1>;
            tap-ms = <5>;
            bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
        )
    };

    tap_dances {
        shifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFTY";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    // ╭────┬────┬────┬────┬────╮  ╭────┬────┬────┬────┬────╮
    //  Q/1  W/2  E/3  R/4  T/5     Y/6  U/7  I/8  O/9  P/10
    // ├────┼────┼────┼────┼────┤  ├────┼────┼────┼────┼────┤
    //  A/13 S/14 D/15 F/16 G/17    H/18 J/19 K/20 L/21 ;/22
    // ├────┼────┼────┼────┼────┤  ├────┼────┼────┼────┼────┤
    //  Z/25 X/26 C/27 V/28 B/29    N/30 M/31 ,/32 ./33 //34
    // ╰────┴────┼────┼────┼────┤  ├────┼────┼────┼────┴────╯
    //            39   40   41      42   43   44
    //           ╰────┴────┴────╯  ╰────┴────┴────╯
    combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <80>;
            key-positions = <13 14>;
            bindings = <&kp TAB>;
            layers = <0>;
        };
        combo_esc {
            timeout-ms = <80>;
            key-positions = <25 26>;
            bindings = <&gresc>;
            layers = <0>;
        };
        combo_ret {
            timeout-ms = <80>;
            key-positions = <21 22>;
            bindings = <&kp RET>;
            layers = <0 2>;
        };


        combo_left_number {
            timeout-ms = <90>;
            key-positions = <19 22>;
            bindings = <&mo LY_LNUM>;
            layers = <0>;
        };
        combo_right_number {
            timeout-ms = <100>;
            key-positions = <15 16>;
            bindings = <&mo LY_RNUM>;
            layers = <0>;
        };

        //- 좌측 한손으로 탭이동이 어렵다
        combo_left_super {
            timeout-ms = <70>;
            key-positions = <20 21>;
            bindings = <&mo LY_LEFT_SUPER>;
            layers = <0>;
        };
        combo_right_super {
            timeout-ms = <70>;
            key-positions = <1 2>;
            bindings = <&mo LY_RIGHT_SUPER>;
            layers = <0>;
        };


        combo_cmd_tab {
            timeout-ms = <70>;
            key-positions = <26 27>;
            bindings = <&kp LG(TAB)>;
            layers = <0>;
        };
        combo_cmd_esc {
            timeout-ms = <70>;
            key-positions = <27 28>;
            bindings = <&kp LG(GRAVE)>;
            layers = <0>;
        };
    };

    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LGUI|MOD_RSFT)>;
        };

        hm1: homerow_mods1 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <190>;
            require-prior-idle-ms = <130>;
            bindings = <&kp>, <&kp>;
        };

        hm2: homerow_mods2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <120>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        mokp: mo_to_kp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
            tapping-term-ms = <170>;
        };

        // 한영
        // mm_lang: morph_lang {
        //     compatible = "zmk,behavior-mod-morph";
        //     #binding-cells = <0>;
        //     bindings = <&kp SPACE>, <&kp F18>;
        //     mods = <(MOD_RSFT)>;
        //     keep-mods = <(MOD_RSFT)>;
        // };

        // 브라켓 []
        mm_lbkt: morph_lbkt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_MINUS>, <&kp LBKT>;
            mods = <(MOD_LGUI)>;
        };
        mm_rbkt: morph_rbkt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_EQUAL>, <&kp RBKT>;
            mods = <(MOD_LGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
                ___  &kp Q        &kp W        &kp E        &kp R        &kp T               &kp Y              &kp U              &kp I         &kp O          &kp P            ___
                ___  &hm1 LSFT A  &kp S        &kp D        &kp F        &kp G               &kp H              &kp J              &kp K         &kp L          &kp BKSP         ___
                ___  &kp Z        &kp X        &kp C        &kp V        &kp B               &kp N              &kp M              &kp COMMA     &hm1 LCTL DOT  &hm2 RSFT SLASH  ___
                ___  ___          ___          &kp LALT     &kp LGUI     &kp SPACE           &mo LY_ARROW       &mokp LY_LNUM F18  &kp RCTRL     ___            ___              ___
            >;
        };

        array_layer {
            label = "LY_ARROW";
            bindings = <
                ___    &kp LBRC        &kp RBRC   &kp LPAR  &kp RPAR      &kp DLLR           ___       &kp GRAVE  &kp UP            &kp PG_UP         &kp COLON  ___
                ___    &kp LSFT        &kp LCTL   &mm_lbkt  &mm_rbkt      &kp SQT            &kp DQT   &kp LEFT   &kp DOWN          &kp RIGHT         &kp SEMI   ___
                ___    &kp UNDER       &kp QMARK  &kp LT    &kp GT        &kp BSLH           &kp AMPS  &kp PG_DN  &kp LG(LS(LBKT))  &kp LG(LS(RBKT))  &kp PIPE   ___
                ___    ___             ___        &kp LALT  &kp LGUI      &kp SPACE          ___       ___        ___                ___              ___        ___
            >;
        };

        rnum_layer {
            label = "LY_RNUM";
            bindings = <
                ___  ___  ___  ___  ___  &kp RBKT        &kp PRCNT     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS   ___
                ___  ___  ___  ___  ___  &kp EQUAL       &kp STAR      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  ___
                ___  ___  ___  ___  ___  &kp BSLH        &kp SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT    ___
                ___  ___  ___  ___  ___  &kp SPACE       &kp NUMBER_0  ___           ___           ___           ___        ___
            >;
        };

        lnum_layer {
            label = "LY_LNUM";
            bindings = <
                ___  &kp PRCNT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  ___           ___  ___  ___  ___  ___          ___
                ___  &kp LCTL   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  ___           ___  ___  ___  ___  &mo LY_FUNC  ___
                ___  &kp LSFT   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  ___           ___  ___  ___  ___  ___          ___
                ___  ___        ___           &kp LALT      &kp LGUI      &kp NUMBER_0  ___  ___  ___  ___  ___          ___
            >;
        };

        func_layer {
            label = "LY_FUNC";
            bindings = <
                ___  ___       &kp F1  &kp F2    &kp F3    &kp F10   ___  ___  ___  ___  ___  ___
                ___  &kp LCTL  &kp F4  &kp F5    &kp F6    &kp F11   ___  ___  ___  ___  ___  ___
                ___  &kp LSFT  &kp F7  &kp F8    &kp F9    &kp F12   ___  ___  ___  ___  ___  ___
                ___  ___       ___     &kp LALT  &kp LGUI  &kp SPACE ___  ___  ___  ___  ___  ___
            >;
        };

        lsuper_layer {
            label = "LY_LEFT_SUPER";
            bindings = <
                ___  &kp RC(NUMBER_6)  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  ___  ___  ___  ___  ___  ___
                ___  &kp LG(NUMBER_0)  &kp LC(GRAVE)     ___               &kp LG(SPACE)     ___               ___  ___  ___  ___  ___  ___
                ___  &kp LSFT          &kp NUMBER_7      &kp NUMBER_8      &kp NUMBER_9      ___               ___  ___  ___  ___  ___  ___
                ___  ___               ___               &kp LALT          &kp LGUI          &kp SPACE         ___  ___  ___  ___  ___  ___
            >;
        };

        rsuper_layer {
            label = "LY_RIGHT_SUPER";
            bindings = <
                ___  ___  ___  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  ___  ___  ___  ___  ___  ___
                ___  ___  ___  ___               ___                ___              ___  ___  ___  ___  ___  ___
                ___  ___  ___  ___               ___                ___              ___  ___  ___  ___  ___  ___
                ___  ___  ___  &kp LALT          &kp LGUI           &kp SPACE        ___  ___  ___  ___  ___  ___
            >;
        };

    };

};
