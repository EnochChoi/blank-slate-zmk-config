#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define TBLE_ORTHO 1
#define ___ &none
// #define XXX &none
// #define ___ &trans

#define LY_ARROW 1

&lt {
    quick_tap_ms = <180>;
    tapping-term-ms = <180>;
};

&mt {
    tapping-term-ms = <300>;
};

#define BT(n) BT_SEL n

/ {

    chosen {
        zmk,matrix_transform = &ortho_transform;
    };

    macros {
        ZMK_MACRO(thumbs_up,
            wait-ms = <1>;
            tap-ms = <5>;
            bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
        )
    };

    tap_dances {
        shifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFTY";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <80>;
            key-positions = <1 2>;
            bindings = <&kp TAB>;
        };
        combo_esc {
            timeout-ms = <80>;
            key-positions = <15 16>;
            bindings = <&gresc>;
        };
        combo_ret {
            timeout-ms = <80>;
            key-positions = <20 21>;
            //key-positions = <20 31>;
            bindings = <&kp RET>;
        };
    };

    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LGUI|MOD_RSFT)>;
        };

        hm1: homerow_mods1 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <120>;
            bindings = <&kp>, <&kp>;
        };

        //! (잘됨)
        hm2: homerow_mods2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <160>;
            quick-tap-ms = <160>;
            require-prior-idle-ms = <120>;
            bindings = <&kp>, <&kp>;
        };

        mm_bs: morph_bs {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RSFT>, <&kp BKSP>;
            mods = <(MOD_LGUI|MOD_LALT|MOD_LSFT)>;
            keep-mods = <(MOD_LGUI|MOD_LALT)>;
        };

        mm_bs2: morph_bs2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mo LY_ARROW>, <&kp BKSP>;
            mods = <(MOD_RSFT|MOD_RGUI|MOD_RALT)>;
            keep-mods = <(MOD_RGUI|MOD_RALT)>;
        };
    };

    //- 삭제가 쉽게 되야 한다 (삭제가 제일 피곤)
        //- 엄지에 삭제 모프
        //- 잘안되면 콤보로 삭제 넣는것도 좋을듯
    //- 스페이스 = 우측 홈로우로 모프 적용해서 엔터 넣어보기

    //- 브라켓[] 모프로 변경
    //- 숫자 콤보 (14,15), 특수문자(고민), 탭이동

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
                ___  &kp Q        &kp W        &kp E        &kp R        &kp T                &kp Y              &kp U             &kp I         &kp O        &kp P            ___
                ___  &hm1 RSFT A  &hm1 LCTL S  &hm1 RALT D  &hm1 RGUI F  &kp G                &kp H              &hm2 RGUI J       &hm2 RALT K   &hm2 LCTL L  &kp RSFT         ___
                ___  &kp Z        &kp X        &kp C        &kp V        &kp B                &kp N              &kp M             &kp COMMA     &kp DOT      &kp SLASH        ___
                ___  ___          ___          &kp LALT     &kp LGUI     &kp SPACE            &mm_bs2            &lt RCTRL F18     &kp RCTRL     ___          ___              ___
            >;
        };

        array_layer {
            label = "LY_ARROW";
            bindings = <
                ___    &kp LBRC        &kp RBRC   &kp LPAR      &kp RPAR      &kp DLLR           ___       &kp GRAVE  &kp UP            &kp PG_UP         &kp COLON  ___
                ___    &kp LSFT        &kp LCTL   &kp KP_MINUS  &kp KP_EQUAL  &kp SQT            &kp DQT   &kp LEFT   &kp DOWN          &kp RIGHT         &kp SEMI   ___
                ___    &kp UNDER       &kp QMARK  &kp LT        &kp GT        &kp BSLH           &kp AMPS  &kp PG_DN  &kp LG(LS(LBKT))  &kp LG(LS(RBKT))  ___        ___
                ___    ___             ___        &kp LALT      &kp LGUI      &kp SPACE          ___       ___        ___                ___              ___        ___
            >;
        };
    };

};
