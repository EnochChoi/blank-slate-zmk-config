#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_BASE 1
#define TBLE_ORTHO 1

#define LY_NAV 1
#define LY_RIGHT_NUM 2
#define LY_LEFT_NUM 3
#define LY_FUNC 4
#define LY_NAV_ASSET 5
#define LY_SPECIAL 6

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <200>;
};

&mt {
    tapping-term-ms = <300>;
};

#define BT(n) BT_SEL n

/ {

    chosen {
        zmk,matrix_transform = &ortho_transform;
    };

    macros {
        ZMK_MACRO(thumbs_up,
            wait-ms = <1>;
            tap-ms = <5>;
            bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
        )
    };

    tap_dances {
        shifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFTY";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LGUI|MOD_RSFT)>;
        };

        // - 키입력 + ESC
        // &kp_gresc LCTRL 0
        kp_gresc: kp_to_gresc {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_TO_GRESC";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&gresc>;
            tapping-term-ms = <170>;
        };

        // - 레이어 + ESC
        // &mo_gresc LAYER_NAME 0
        mo_gresc: mo_to_gresc {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TO_GRESC";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&mo>, <&gresc>;
            tapping-term-ms = <220>;
        };

        // - 키입력 + 키입력
        // &kp_kp RCTRL F18
        kp_kp: kp_to_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_TO_KP";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            tapping-term-ms = <170>;
        };

        // - 레이어 + 키입력
        // &mo_kp LY_LEFT_NUM F18
        mo_kp: mo_to_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TO_KP";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
            tapping-term-ms = <170>;
        };

        // - 레이어 + 키입력 (스페셜 전용)
        // &lts LY_SPECIAL SPACE
        lts: lt_space {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_SPACE";
            #binding-cells = <2>;
            flavor = "balanced"; // [hold-preferred, balanced, tap-preferred]
            tapping-term-ms = <180>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <50>; //-(90>70) 수치가 높을수록 mo 두번 연속 접근이 잘 안됩니다.
            bindings = <&mo>, <&kp>;
        };
    };

    //- 스페이스바에 넣었을대 타자가 안밀리는지 확인 > 포토샵키나 숫자키 강추

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
                &mo_kp LY_RIGHT_NUM TAB  &kp Q      &kp W  &kp E     &kp R     &kp T      &kp Y       &kp U              &kp I      &kp O     &kp P               &kp BKSP
                &kp_gresc LCTRL 0        &kp A      &kp S  &kp D     &kp F     &kp G      &kp H       &lts LY_SPECIAL J  &kp K      &kp L     &mo LY_LEFT_NUM     &kp RET
                &kp LSHFT                &kp Z      &kp X  &kp C     &kp V     &kp B      &kp N       &kp M              &kp COMMA  &kp DOT   &kp_kp LCTRL SLASH  &kp RSHFT
                &none                    &kp LCTRL  &none  &kp LALT  &kp LGUI  &kp SPACE  &mo LY_NAV  &kp_kp RCTRL F18   &kp RCTRL  &none     &none               &none
            >;
        };

        nav_layer {
            label = "LY_NAV";
            bindings = <
                &kp F18    &kp LBRC   &kp RBRC   &kp LPAR      &kp RPAR      &kp DLLR   &kp PLUS  &kp GRAVE  &kp UP            &kp PG_UP         &kp COLON         &kp BKSP
                &kp LCTRL  &kp LBKT   &kp RBKT   &kp KP_MINUS  &kp KP_EQUAL  &kp SQT    &kp DQT   &kp LEFT   &kp DOWN          &kp RIGHT         &kp SEMI          &kp RET
                &kp LSHFT  &kp UNDER  &kp QMARK  &kp LT        &kp GT        &kp BSLH   &kp AMPS  &kp PG_DN  &kp LG(LS(LBKT))  &kp LG(LS(RBKT))  &mo LY_NAV_ASSET  &kp RSHFT
                &none      &kp LCTRL  &none      &kp LALT      &kp LGUI      &kp SPACE  &none     &none      &none             &none             &none             &none
            >;
        };

        right_num_layer {
            label = "LY_RIGHT_NUM";
            bindings = <
                &none  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)      &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp RBKT   &kp PRCNT     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS   &kp BKSP
                &none  &kp RC(NUMBER_6)  &kp LG(LS(NUMBER_3))  &kp LG(SPACE)     &kp LC(GRAVE)     &kp EQUAL  &kp STAR      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp RET
                &none  &kp LG(NUMBER_0)  &kp LG(LS(LBKT))      &kp LG(LS(RBKT))  &none             &kp BSLH   &kp SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT    &kp EQUAL
                &none  &none             &none                 &none             &kp LG(SPACE)     &kp SPACE  &kp NUMBER_0  &none         &none         &none         &none      &none
            >;
        };

        left_num_layer {
            label = "LY_LEFT_NUM";
            bindings = <
                &none      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &none      &kp PLUS     &kp MINUS  &kp EQUAL  &none  &none
                &kp PRCNT  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none         &none         &kp SLASH  &kp DOT      &kp COMMA  &kp STAR   &none  &none
                &kp LSHFT  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none         &none         &none      &mo LY_FUNC  &none      &none      &none  &none
                &none      &none         &none         &kp LALT      &kp LGUI      &kp NUMBER_0  &kp LSHFT  &none        &none      &none      &none  &none
            >;
        };

        func_layer {
            label = "LY_FUNC";
            bindings = <
                &none      &kp F1  &kp F2  &kp F3    &kp F10   &none      &none  &none  &none  &none  &none  &none
                &kp LCTRL  &kp F4  &kp F5  &kp F6    &kp F11   &none      &none  &none  &none  &none  &none  &none
                &kp LSHFT  &kp F7  &kp F8  &kp F9    &kp F12   &none      &none  &none  &none  &none  &none  &none
                &none      &none   &none   &kp LALT  &kp LGUI  &kp SPACE  &none  &none  &none  &none  &none  &none
            >;
        };

        nav_asset_layer {
            label = "LY_NAV_ASSET";
            bindings = <
                &none  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &none  &none  &none  &none  &none  &none  &bt BT_SEL 0
                &none  &kp LG(LA(LBKT))  &kp LG(LA(RBKT))  &none             &none             &none  &none  &none  &none  &none  &none  &bt BT_SEL 1
                &none  &none             &none             &none             &none             &none  &none  &none  &none  &none  &none  &bt BT_CLR
                &none  &none             &none             &none             &none             &none  &none  &none  &none  &none  &none  &none
            >;
        };

        nav_special {
            label = "LY_SPECIAL";
            bindings = <
                &none  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &none  &none  &none  &none  &none  &none  &none
                &none  &none             &none             &none             &none             &none  &none  &none  &none  &none  &none  &none
                &none  &none             &none             &none             &none             &none  &none  &none  &none  &none  &none  &none
                &none  &none             &none             &none             &none             &none  &none  &none  &none  &none  &none  &none
            >;
        };
    };

};
