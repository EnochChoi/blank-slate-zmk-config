#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define TBLE_ORTHO 1
#define ___ &none
// #define XXX &none
// #define ___ &trans

#define LY_BASE 0
#define LY_NAV 1
#define LY_LNUM 2
#define LY_RNUM 3
#define LY_SPECIAL 4

&lt {
    flavor = "balanced";
    quick_tap_ms = <170>;
    tapping-term-ms = <170>;
};

&mt {
    tapping-term-ms = <300>;
};

#define BT(n) BT_SEL n


/ {

    chosen {
        zmk,matrix_transform = &ortho_transform;
    };

    macros {
        ZMK_MACRO(thumbs_up,
            wait-ms = <1>;
            tap-ms = <5>;
            bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
        )
    };

    tap_dances {
        shifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFTY";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    combos {
        // #include "combos.dtsi"
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <80>;
            key-positions = <1 2>;
            bindings = <&kp TAB>;
        };
        combo_esc {
            timeout-ms = <80>;
            key-positions = <15 16>;
            bindings = <&gresc>;
        };
        combo_ret {
            timeout-ms = <80>;
            key-positions = <20 21>;
            bindings = <&kp RET>;
        };
    };

    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LGUI|MOD_RSFT)>;
        };

        hm1: homerow1 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <80>;
            bindings = <&kp>, <&kp>;
        };

        hm2: homerow2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <130>;
            quick-tap-ms = <130>;
            bindings = <&kp>, <&kp>;
        };

        hm3: homerow3 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <130>;
            quick-tap-ms = <130>;
            bindings = <&mo>, <&kp>;
        };

        hm4: homerow4 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <170>;
            quick-tap-ms = <170>;
            require-prior-idle-ms = <110>;
            bindings = <&mo>, <&kp>;
        };

        mm_bs: morph_bs {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&hm3 LY_LNUM BKSP>, <&kp BKSP>;
            mods = <(MOD_LGUI|MOD_LALT)>;
            keep-mods = <(MOD_LGUI|MOD_LALT)>;
        };
    };

    //- [esc 탭] [지우기 엔터 한영]
    //- 뒤로가기(z) 잘안됨 (체크해보기)

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
                ___  &hm4 LY_RNUM Q  &kp W        &kp E     &kp R     &kp T                &kp Y       &kp U              &kp I      &kp O    &kp P            ___
                ___  &hm1 LSFT A     &hm1 LCTL S  &kp D     &kp F     &kp G                &kp H       &hm4 LY_SPECIAL J  &kp K      &kp L    &mm_bs           ___
                ___  &kp Z           &kp X        &kp C     &kp V     &kp B                &kp N       &kp M              &kp COMMA  &kp DOT  &hm2 RSFT SLASH  ___
                ___  ___             ___          &kp LALT  &kp LGUI  &kp SPACE            &mo LY_NAV  &lt RCTRL F18      &kp RCTRL  ___      ___              ___

            >;
        };

        nav_layer {
            label = "LY_NAV";
            bindings = <
                //- 모프로 탭이동
                ___    &kp LBRC        &kp RBRC        &kp LPAR      &kp RPAR      &kp DLLR           ___       &kp GRAVE  &kp UP            &kp PG_UP         &kp COLON  &kp BKSP
                ___    &hm1 LSFT LBKT  &hm1 LCTL RBKT  &kp KP_MINUS  &kp KP_EQUAL  &kp SQT            &kp DQT   &kp LEFT   &kp DOWN          &kp RIGHT         &kp SEMI   &kp RET
                ___    &kp UNDER       &kp QMARK       &kp LT        &kp GT        &kp BSLH           &kp AMPS  &kp PG_DN  &kp LG(LS(LBKT))  &kp LG(LS(RBKT))  ___       &kp RSHFT
                ___    ___              ___            &kp LALT      &kp LGUI      &kp SPACE          ___       ___        ___                ___              ___      ___
            >;
        };

        lnumber_layer {
            label = "LY_LNUM";
            bindings = <
                ___  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  ___           ___        &kp PLUS  &kp MINUS  &kp EQUAL  ___
                ___  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LCTL      ___           ___           &kp SLASH  &kp DOT   &kp COMMA  &kp STAR   ___
                ___  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LSFT      ___           ___           ___        ___        ___       ___        ___
                ___  ___           ___           &kp LALT      &kp LGUI      &kp NUMBER_0  &kp LSHFT     ___        ___        ___       ___        ___
            >;
        };

        rnumber_layer {
            label = "LY_RNUM";
            bindings = <
                ___  ___               &kp LG(NUMBER_1)      &kp LG(NUMBER_2)  &kp LG(NUMBER_3)       &kp LG(NUMBER_4)   &kp PRCNT     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS   &kp BKSP
                ___  &kp RC(NUMBER_6)  &kp LG(LS(NUMBER_3))  &kp LG(LS(LBKT))  &kp LG(LS(RBKT))       &kp EQUAL          &kp STAR      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp RET
                ___  ___               ___                   ___               ___                    &kp BSLH           &kp SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT    &kp EQUAL
                ___  ___               ___                   ___               &kp LC(LS(LA(LG(C))))  &kp SPACE          &kp NUMBER_0  ___           ___           ___           ___         ___
            >;
        };

        nav_special {
            label = "LY_SPECIAL";
            bindings = <
                ___  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  ___            ___  ___  ___  ___  ___  ___
                ___  ___               &kp LG(NUMBER_0)  ___               &kp LC(GRAVE)     ___            ___  ___  ___  ___  ___  ___
                ___  &kp LG(LA(LBKT))  &kp LG(LA(RBKT))  ___               ___               ___            ___  ___  ___  ___  ___  ___
                ___  ___               ___               ___               ___               &kp LG(SPACE)  ___  ___  ___  ___  ___  ___
            >;
        };

    };

};
